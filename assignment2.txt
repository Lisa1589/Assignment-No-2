Ans1-I think the best way to understand what DevOps is, to compare it with something similar. If you compare it with Agile, as itâ€™s done in here, you will see that DevOps addresses the gap between developer, tester and ops people while agile does the same between customer and developer. Both of the methodologies bring a similar, yet different solutions to the problem.
The challenges of ops people are mainly structural rather than code-based. The structure and the environment has a greater impact on the processes. Containerization, Container Orchestration, Cloud Technologies and the technologies like Infrastructure as Code (IaC) help the organizations to tackle the problems. So, one part of the issue could be dealt with by those technologies and DevOps brings some useful tools to the table to overcome the issue. The purpose of these tools is to make the processes automated, away from human intervention, minimize the effects of environment changes and build flexible structures. This is the easy part of the problem. You can boost your effectiveness with contemporary tools.
But we should also address the other side of the problem. In order to handle it, DevOps requires the organizations to divide the problem of big releases into small pieces by reducing the amount of time for a release cycle. So, how the developers, testers, and ops people work, should conform to that change. But before that, the mindset of those IT professionals should change at the very beginning.

Ans2-
 DevOps Tools 

Puppet: Puppet is the most widely used DevOps tool. It allows the delivery and release of the technology changes quickly and frequently. It has features of versioning, automated testing, and continuous delivery. It enables to manage entire infrastructure as code without expanding the size of the team
Ansible: Ansible is a leading DevOps tool. Ansible is an open-source IT engine that automates application deployment, cloud provisioning, intra service orchestration, and other IT tools. It makes it easier for DevOps teams to scale automation and speed up productivity.
Docker: Docker is a high-end DevOps tool that allows building, ship, and run distributed applications on multiple systems. It also helps to assemble the apps quickly from the components, and it is typically suitable for container management.
Nagios: Nagios is one of the more useful tools for DevOps. It can determine the errors and rectify them with the help of network, infrastructure, server, and log monitoring systems.
CHEF: A chef is a useful tool for achieving scale, speed, and consistency. The chef is a cloud-based system and open source technology. This technology uses Ruby encoding to develop essential building blocks such as recipes and cookbooks. The chef is used in infrastructure automation and helps in reducing manual and repetitive tasks for infrastructure management.